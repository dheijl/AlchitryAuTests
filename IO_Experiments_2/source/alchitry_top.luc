// reference: https://natalieagus.github.io/50002/fpga/fpga_2
// Note: Lucid V1 fsm = V2 enum !!
module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led[3][8],    // LEDs on IO Shield
    output io_segment[8],   // 7-segment LEDs on IO Shield
    output io_select[4],    // Digit select on IO Shield
    input io_button[5],     // 5 buttons on IO Shield
    input io_dip[3][8]      // DIP switches on IO Shield
) {
    
     sig rst                 // reset signal
    
    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
        .rst(rst) {
                multi_seven_seg seg (#DIV($is_sim() ? 1 : 16), #DIGITS(4)) // 4 digit 7-segment display
        }
    }
    
     var_adder va(#BITS(24))
     bin_to_dec btd(#DIGITS(4))
   
    
    always {
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset
        
     
        
        led = 8h00              // turn LEDs off
        
        
        io_led = 3x{{8h00}}
        io_segment = 8h_f_f
        io_select = 4h_f
 
        va.x = 1
        va.y = 2
        va.cin = 0
        io_led = $build(va.sum, 3)
        
        btd.value = va.sum[13:0]
        sig result[4][4] = btd.digits
        seg.values = result
        io_segment = ~seg.seg // connect segments to the driver
        io_select = ~seg.sel  // connect digit select to the driver
        
        
        usb_tx = usb_rx         // loop serial port

    
       }
}